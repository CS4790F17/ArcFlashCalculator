@model ArcFlashCalculator.Models.ChangePassword

@{
    Layout = "~/Views/Shared/_AdminNavbarPartial.cshtml";
    ViewBag.Title = "Change Password";
}

<h2>Change Password</h2>
<div class="container-fluid">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" id="form">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.LabelFor(model => model.user.Email, "Email Address", new { htmlAttributes = new { @class = "control-label mb-2" } })
                @Html.TextBoxFor(model => model.user.Email, new { @disabled = true, @readonly = true,  @class = "form-control" })
                @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.LabelFor(model => model.user.Password, "Current Password", new { htmlAttributes = new { @class = "control-label mb-2" } })
                @Html.PasswordFor(model => model.user.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.user.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.LabelFor(model => model.newPassword, "New Password", new { htmlAttributes = new { @class = "control-label mb-2" } })
                @Html.PasswordFor(model => model.newPassword, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.newPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.LabelFor(model => model.confirmPassword, "Confirm Password", new { htmlAttributes = new { @class = "control-label mb-2" } })
                @Html.PasswordFor(model => model.confirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Error messages*@
        <div class="userPassErr">
            <p style="color:red;padding-left:190px;">You have entered an invalid E-mail and/or Password combination for the existing user.</p>
        </div>
        <div class="passComplexityErr">
            <p style="color:red;padding-left:190px;">Your new password must contain at least 15 characters, including 2 capital letters, 2 numbers, and 2 special characters.</p>
        </div>
        <div class="confirmErr">
            <p style="color:red;padding-left:190px;">The new and confirm password fields must match.</p>
        </div>
        <div class="blankErr">
            <p style="color:red;padding-left:190px;">All fields must be filled in.</p>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}
</div>

<style>
    #form .mb-2 {
        margin-bottom: .75rem;
    }

    #form .mb-4 {
        margin-bottom: 1.5rem;
    }

    #email {
        margin-bottom: .1rem;
    }
</style>

@{
    if (Model.UserOrPasswordError)
    {
        <style>
            div.userPassErr {
                display: block;
            }
        </style>
    }
    else
    {
        <style>
            div.userPassErr {
                display: none;
            }
        </style>
    }

    if (Model.PasswordComplexityError)
    {
        <style>
            div.passComplexityErr {
                display: block;
            }
        </style>
    }
    else
    {
        <style>
            div.passComplexityErr {
                display: none;
            }
        </style>
    }

    if (Model.confirmError)
    {
        <style>
            div.confirmErr {
                display: block;
            }
        </style>
    }
    else
    {
        <style>
            div.confirmErr {
                display: none;
            }
        </style>
    }

    if (Model.blankFieldError)
    {
        <style>
            div.blankErr {
                display: block;
            }
        </style>
    }
    else
    {
        <style>
            div.blankErr {
                display: none;
            }
        </style>
    }
}